{
  "uid" : "e92f1e4304bd95e3",
  "name" : "Case_002-登录成功",
  "fullName" : "testcase.TestKeywords.TestKeyword#test_run[run_case1]",
  "historyId" : "8d5dfeb10adbb2d95195a9139c95dbbf",
  "time" : {
    "start" : 1589161413384,
    "stop" : 1589161429026,
    "duration" : 15642
  },
  "status" : "failed",
  "statusMessage" : "AssertionError",
  "statusTrace" : "self = <testcase.TestKeywords.TestKeyword object at 0x0000025612D704F0>\nstart_appium_desired = <appium.webdriver.webdriver.WebDriver (session=\"a4e7703b-e157-4d03-8e8f-0ad3e646e916\")>\nrun_case = {'CASE_ID': 'Case_002', 'TC_ID': 'TC_Login', '备注': '登录功能测试', '描述': '登录功能测试', ...}\n\n    @pytest.mark.parametrize(\"run_case\", run_list)\n    def test_run(self, start_appium_desired, run_case):\n        self.driver = start_appium_desired\n        self.driver.launch_app()\n        log.info(\"执行用例内容:{}\".format(run_case))\n>       Operate(self.driver).step(data, run_case)\n\ntestcase\\TestKeywords.py:44: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nbase\\BaseAction.py:126: in get_err_screenshot\n    raise e\nbase\\BaseAction.py:120: in get_err_screenshot\n    func(self, *args, **kwargs)\ntestcase\\operate\\KeywordOperatePytest.py:153: in step\n    action_method(**param_value)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <base.BaseAction.Action object at 0x00000256135EC6A0>\nkwargs = {'by': 'xpath', 'expect': '成功', 'value': './/*[starts-with(@text,\"帐户\")]'}\ntoast_result = True\n\n    def assert_toast_result(self, **kwargs):\n        toast_result = self.is_toast_exist(**kwargs)\n        # assert toast_result\n>       assert toast_result == False\nE       AssertionError\n\nbase\\BaseAction.py:103: AssertionError",
  "flaky" : false,
  "beforeStages" : [ {
    "name" : "start_appium_desired",
    "time" : {
      "start" : 1589161358728,
      "stop" : 1589161382718,
      "duration" : 23990
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  }, {
    "name" : "_Class__pytest_setup_class",
    "time" : {
      "start" : 1589161382718,
      "stop" : 1589161382718,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  }, {
    "name" : "cmdopt",
    "time" : {
      "start" : 1589161358728,
      "stop" : 1589161358728,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError",
    "statusTrace" : "self = <testcase.TestKeywords.TestKeyword object at 0x0000025612D704F0>\nstart_appium_desired = <appium.webdriver.webdriver.WebDriver (session=\"a4e7703b-e157-4d03-8e8f-0ad3e646e916\")>\nrun_case = {'CASE_ID': 'Case_002', 'TC_ID': 'TC_Login', '备注': '登录功能测试', '描述': '登录功能测试', ...}\n\n    @pytest.mark.parametrize(\"run_case\", run_list)\n    def test_run(self, start_appium_desired, run_case):\n        self.driver = start_appium_desired\n        self.driver.launch_app()\n        log.info(\"执行用例内容:{}\".format(run_case))\n>       Operate(self.driver).step(data, run_case)\n\ntestcase\\TestKeywords.py:44: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nbase\\BaseAction.py:126: in get_err_screenshot\n    raise e\nbase\\BaseAction.py:120: in get_err_screenshot\n    func(self, *args, **kwargs)\ntestcase\\operate\\KeywordOperatePytest.py:153: in step\n    action_method(**param_value)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <base.BaseAction.Action object at 0x00000256135EC6A0>\nkwargs = {'by': 'xpath', 'expect': '成功', 'value': './/*[starts-with(@text,\"帐户\")]'}\ntoast_result = True\n\n    def assert_toast_result(self, **kwargs):\n        toast_result = self.is_toast_exist(**kwargs)\n        # assert toast_result\n>       assert toast_result == False\nE       AssertionError\n\nbase\\BaseAction.py:103: AssertionError",
    "steps" : [ {
      "name" : "点击暂不需要",
      "time" : {
        "start" : 1589161417657,
        "stop" : 1589161418509,
        "duration" : 852
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false,
      "stepsCount" : 0
    }, {
      "name" : "点击我的",
      "time" : {
        "start" : 1589161418513,
        "stop" : 1589161420627,
        "duration" : 2114
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false,
      "stepsCount" : 0
    }, {
      "name" : "切换密码登录",
      "time" : {
        "start" : 1589161420629,
        "stop" : 1589161422579,
        "duration" : 1950
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false,
      "stepsCount" : 0
    }, {
      "name" : "输入用户名",
      "time" : {
        "start" : 1589161422582,
        "stop" : 1589161423166,
        "duration" : 584
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false,
      "stepsCount" : 0
    }, {
      "name" : "输入密码",
      "time" : {
        "start" : 1589161423167,
        "stop" : 1589161424336,
        "duration" : 1169
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false,
      "stepsCount" : 0
    }, {
      "name" : "点击登录",
      "time" : {
        "start" : 1589161424337,
        "stop" : 1589161424886,
        "duration" : 549
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false,
      "stepsCount" : 0
    }, {
      "name" : "结果验证",
      "time" : {
        "start" : 1589161424887,
        "stop" : 1589161427736,
        "duration" : 2849
      },
      "status" : "failed",
      "statusMessage" : "AssertionError\n",
      "statusTrace" : "  File \"C:\\Users\\cjj\\PycharmProjects\\Appium_AutoTest\\testcase\\operate\\KeywordOperatePytest.py\", line 153, in step\n    action_method(**param_value)\n  File \"C:\\Users\\cjj\\PycharmProjects\\Appium_AutoTest\\base\\BaseAction.py\", line 103, in assert_toast_result\n    assert toast_result == False\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true,
      "stepsCount" : 0
    } ],
    "attachments" : [ {
      "uid" : "6cb24a46605eeb41",
      "name" : "2020-05-11 09:43:49",
      "source" : "6cb24a46605eeb41.png",
      "type" : "image/png",
      "size" : 225582
    }, {
      "uid" : "71b37d4437ed185e",
      "name" : "log",
      "source" : "71b37d4437ed185e.txt",
      "type" : "text/plain",
      "size" : 3566
    } ],
    "parameters" : [ ],
    "attachmentsCount" : 2,
    "shouldDisplayMessage" : true,
    "hasContent" : true,
    "stepsCount" : 7
  },
  "afterStages" : [ {
    "name" : "_Class__pytest_setup_class::0",
    "time" : {
      "start" : 1589161429568,
      "stop" : 1589161429573,
      "duration" : 5
    },
    "status" : "broken",
    "statusMessage" : "AttributeError: type object 'TestKeyword' has no attribute 'driver'\n",
    "statusTrace" : "  File \"C:\\Users\\cjj\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\allure_commons\\_allure.py\", line 169, in __call__\n    return self._fixture_function(*args, **kwargs)\n  File \"C:\\Users\\cjj\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\_pytest\\fixtures.py\", line 802, in _teardown_yield_fixture\n    next(it)\n  File \"C:\\Users\\cjj\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\_pytest\\python.py\", line 765, in xunit_setup_class_fixture\n    _call_with_optional_argument(func, self.obj)\n  File \"C:\\Users\\cjj\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\_pytest\\python.py\", line 702, in _call_with_optional_argument\n    func(arg)\n  File \"C:\\Users\\cjj\\PycharmProjects\\Appium_AutoTest\\testcase\\TestKeywords.py\", line 50, in teardown_class\n    self.driver.quit()\n",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true,
    "stepsCount" : 0
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "登录功能测试"
  }, {
    "name" : "story",
    "value" : "登录功能测试"
  }, {
    "name" : "parentSuite",
    "value" : "testcase"
  }, {
    "name" : "suite",
    "value" : "TestKeywords"
  }, {
    "name" : "subSuite",
    "value" : "TestKeyword"
  }, {
    "name" : "host",
    "value" : "DESKTOP-0LL74L3"
  }, {
    "name" : "thread",
    "value" : "11040-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "testcase.TestKeywords"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "run_case",
    "value" : "{'TC_ID': 'TC_Login', 'CASE_ID': 'Case_002', '是否运行': 'y', '用例名称': '登录成功', '测试数据': 'username=15797890689,password=1240055602CAI', '期望结果': '成功', '备注': '登录功能测试', '描述': '登录功能测试'}"
  } ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ ]
  },
  "source" : "e92f1e4304bd95e3.json",
  "parameterValues" : [ "{'TC_ID': 'TC_Login', 'CASE_ID': 'Case_002', '是否运行': 'y', '用例名称': '登录成功', '测试数据': 'username=15797890689,password=1240055602CAI', '期望结果': '成功', '备注': '登录功能测试', '描述': '登录功能测试'}" ]
}